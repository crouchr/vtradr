@version:3.5
@include "scl.conf"

# syslog-ng configuration file.
#
# Vagrant provisioning version
#
# This should behave pretty much like the original syslog on RedHat. But
# it could be configured a lot smarter.
#
# See syslog-ng(8) and syslog-ng.conf(5) for more information.
#
# Note: it also sources additional configuration files (*.conf)
#       located in /etc/syslog-ng/conf.d/

options {
    flush_lines (0);
    time_reopen (10);
    log_fifo_size (1000);
    chain_hostnames (off);
    use_dns (no);
    use_fqdn (no);
    create_dirs (no);
    keep_hostname (yes);
};

source s_sys {
    system();
    internal();
    udp(ip(0.0.0.0) port(514));
};

destination d_cons { file("/dev/console"); };
destination d_mesg { file("/var/log/messages"); };
destination d_auth { file("/var/log/secure"); };
destination d_mail { file("/var/log/maillog" flush_lines(10)); };
destination d_spol { file("/var/log/spooler"); };
destination d_boot { file("/var/log/boot.log"); };
destination d_cron { file("/var/log/cron"); };
destination d_kern { file("/var/log/kern"); };
destination d_mlal { usertty("*"); };

filter f_kernel     { facility(kern); };

filter f_default    { level(info..emerg) and
                        not (facility(mail)
                        or facility(authpriv)
                        or program(kibana)
                        or program(filebeat)
                        or program(grafana)
                        or program(vagrant)
                        or program(mysqld)
                        or program(dockerd)
                        or program(containerd)
                        or program(tradr-bitcoin-grabber)
                        or program(tradr-ibit-grabber)
                        or program(tradr-indices-grabber)
                        or program(tradr-commodities-grabber)
                        or program(tradr-treasuries-grabber)
                        or program(tradr-tepper-indicators)
                        or program(tradr-core-ratios)
                        or program(tradr-scanner)
                        or facility(cron)); };

filter f_auth       { facility(authpriv); };
filter f_mail       { facility(mail); };
filter f_emergency  { level(emerg); };
filter f_news       { facility(uucp) or
                        (facility(news)
                        and level(crit..emerg)); };
filter f_boot   { facility(local7); };
filter f_cron   { facility(cron); };


#log { source(s_sys); filter(f_kernel); destination(d_cons); };
log { source(s_sys); filter(f_kernel); destination(d_kern); };
log { source(s_sys); filter(f_default); destination(d_mesg); };
log { source(s_sys); filter(f_auth); destination(d_auth); };
log { source(s_sys); filter(f_mail); destination(d_mail); };
log { source(s_sys); filter(f_emergency); destination(d_mlal); };
log { source(s_sys); filter(f_news); destination(d_spol); };
log { source(s_sys); filter(f_boot); destination(d_boot); };
log { source(s_sys); filter(f_cron); destination(d_cron); };

# added by me
filter f_kibana     { program(kibana); };
destination d_kibana { file("/var/log/kibana.log"); };
log { source(s_sys); filter(f_kibana); destination(d_kibana); };

filter f_filebeat     { program(filebeat); };
destination d_filebeat { file("/var/log/filebeat.log"); };
log { source(s_sys); filter(f_filebeat); destination(d_filebeat); };

filter f_vagrant     { program(vagrant); };
destination d_vagrant { file("/var/log/vagrant.log"); };
log { source(s_sys); filter(f_vagrant); destination(d_vagrant); };

filter f_grafana     { program(grafana); };
destination d_grafana { file("/var/log/grafana.log"); };
log { source(s_sys); filter(f_grafana); destination(d_grafana); };

filter f_mysqld     { program(mysqld); };
destination d_mysqld { file("/var/log/mysqld.log"); };
log { source(s_sys); filter(f_mysqld); destination(d_mysqld); };

# TRADR containers
filter f_tradr-bitcoin-grabber     { program(tradr-bitcoin-grabber); };
destination d_tradr-bitcoin-grabber { file("/var/log/tradr-bitcoin-grabber.json"); };
log { source(s_sys); filter(f_tradr-bitcoin-grabber);
destination(d_tradr-bitcoin-grabber); };

filter f_tradr-ibit-grabber     { program(tradr-ibit-grabber); };
destination d_tradr-ibit-grabber { file("/var/log/tradr-ibit-grabber.json"); };
log { source(s_sys); filter(f_tradr-ibit-grabber);
destination(d_tradr-ibit-grabber); };

filter f_tradr-indices-grabber     { program(tradr-indices-grabber); };
destination d_tradr-indices-grabber { file("/var/log/tradr-indices-grabber.json"); };
log { source(s_sys); filter(f_tradr-indices-grabber);
destination(d_tradr-indices-grabber); };

filter f_tradr-treasuries-grabber     { program(tradr-treasuries-grabber); };
destination d_tradr-treasuries-grabber { file("/var/log/tradr-treasuries-grabber.json"); };
log { source(s_sys); filter(f_tradr-treasuries-grabber);
destination(d_tradr-treasuries-grabber); };

filter f_tradr-commodities-grabber     { program(tradr-commodities-grabber); };
destination d_tradr-commodities-grabber { file("/var/log/tradr-commodities-grabber.json"); };
log { source(s_sys); filter(f_tradr-commodities-grabber);
destination(d_tradr-commodities-grabber); };

filter f_tradr-tepper-indicators     { program(tradr-tepper-indicators); };
destination d_tradr-tepper-indicators { file("/var/log/tradr-tepper-indicators.json"); };
log { source(s_sys); filter(f_tradr-tepper-indicators);
destination(d_tradr-tepper-indicators); };

filter f_tradr-core-ratios     { program(tradr-core-ratios); };
destination d_tradr-core-ratios { file("/var/log/tradr-core-ratios.json"); };
log { source(s_sys); filter(f_tradr-core-ratios);
destination(d_tradr-core-ratios); };

# Use standard Syslog format for Swing Trader application
filter f_tradr-scanner { program(tradr-scanner); };
destination d_tradr-scanner { file("/var/log/tradr-scanner.log"); };
log { source(s_sys); filter(f_tradr-scanner);
destination(d_tradr-scanner); };

# End of TRADR containers

# JSON format so not sure what to do with it yet
filter f_dockerd     { program(dockerd); };
destination d_dockerd { file("/var/log/docker.log"); };
log { source(s_sys); filter(f_dockerd); destination(d_dockerd); };

# JSON format so not sure what to do with it yet
filter f_containerd     { program(containerd); };
destination d_containerd { file("/var/log/containerd.log"); };
log { source(s_sys); filter(f_containerd); destination(d_containerd); };

# Source additional configuration files (.conf extension only)
@include "/etc/syslog-ng/conf.d/*.conf"

# vim:ft=syslog-ng:ai:si:ts=4:sw=4:et:
