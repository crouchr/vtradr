# -*- mode: ruby -*-
# vi: set ft=ruby :

# PRODUCTION

# smarter way to do multi-machine is here : https://manski.net/articles/vagrant/multi-machine-tutorial

Vagrant.configure("2") do |config|

  # Application VBOX
  # ================
  # All my TRADR application code is on here - node subject to lots of change
  # This is the node the user interacts with - the 'iceberg' terminal
  # Docker, Jython etc.
  config.vm.define "prd_iceberg" do |iceberg|
    iceberg.vm.box = "tradr7"
    iceberg.vm.box_url = "http://www.tradr.click/boxes/tradr7/tradr7-metadata.json"
    iceberg.vm.box_check_update = true
    iceberg.vm.hostname = "prd-iceberg"
    iceberg.vm.network :public_network, ip: "192.168.1.55", bridge: "eth0"
    iceberg.vm.synced_folder "dbase_backups/", "/home/vagrant/dbase_backups"
    iceberg.vm.synced_folder "watchlists/", "/home/vagrant/watchlists"
    iceberg.vm.synced_folder "reports/", "/home/vagrant/reports"
    iceberg.vm.synced_folder "keys/", "/home/vagrant/keys"
    iceberg.vm.provider "virtualbox" do |vb0|
        vb0.gui = true
        vb0.memory = "4096"
    end
      # start : use these versions during rapid development and then copy to Packer

      #iceberg.vm.provision "file", source: "../common_files/wazuh.conf", destination: "/tmp/wazuh.conf"
      #iceberg.vm.provision "file", source: "../common_files/motd-tradr", destination: "/tmp/etc/motd"
      #iceberg.vm.provision "file", source: "../common_files/syslog-ng.conf", destination: "/tmp/syslog-ng.conf"
      #iceberg.vm.provision "shell", run:  "always", inline: "mv /tmp/wazuh.conf /var/ossec/etc/wazuh.conf"
      #iceberg.vm.provision "shell", run:  "always", inline: "mv /tmp/etc/motd /etc/motd"
      #iceberg.vm.provision "shell", run:  "always", inline: "mv /tmp/syslog-ng.conf /etc/syslog-ng/syslog-ng.conf"
      # end : use these versions during rapid development and then copy to Packer

      # see https://unix.stackexchange.com/questions/309614/how-do-i-set-the-correct-time-on-centos-7
      iceberg.vm.provision "shell", run:  "always", inline: 'timedatectl set-timezone "Europe/London"'

      # copy files to /home/vagrant on the VBOX if destination is just a filename
      # this is just needed for debugging - you can run the scripts using 'shell' without this
      iceberg.vm.provision "file", source: "../common_scripts/tradr-cron-vagrant-user", destination: "/tmp/tradr-cron-vagrant-user"
      iceberg.vm.provision "file", source: "../common_scripts/exchange-rate-service.service", destination: "/tmp/exchange-rate-service.service"
      iceberg.vm.provision "file", source: "../common_scripts/exchange-rate-service-compose.yml", destination: "exchange-rate-service-compose.yml"
      iceberg.vm.provision "file", source: "../common_scripts/candlestick-analyser-service.service", destination: "/tmp/candlestick-analyser-service.service"
      iceberg.vm.provision "file", source: "../common_scripts/candlestick-analyser-service-compose.yml", destination: "candlestick-analyser-service-compose.yml"
      iceberg.vm.provision "file", source: "../common_scripts/realtime-monitor.service", destination: "/tmp/realtime-monitor.service"
      iceberg.vm.provision "file", source: "../common_scripts/realtime-monitor-compose.yml", destination: "realtime-monitor-compose.yml"
      iceberg.vm.provision "file", source: "../common_scripts/open-trades-monitor.service", destination: "/tmp/open-trades-monitor.service"
      iceberg.vm.provision "file", source: "../common_scripts/open-trades-monitor-compose.yml", destination: "open-trades-monitor-compose.yml"
      iceberg.vm.provision "file", source: "../common_scripts/rsi-buy-sniper.service", destination: "/tmp/rsi-buy-sniper.service"
      iceberg.vm.provision "file", source: "../common_scripts/rsi-buy-sniper-compose.yml", destination: "rsi-buy-sniper-compose.yml"
      iceberg.vm.provision "file", source: "../common_scripts/rsi-sell-sniper.service", destination: "/tmp/rsi-sell-sniper.service"
      iceberg.vm.provision "file", source: "../common_scripts/rsi-sell-sniper-compose.yml", destination: "rsi-sell-sniper-compose.yml"
      iceberg.vm.provision "file", source: "../common_scripts/ops-monitor.service", destination: "/tmp/ops-monitor.service"
      iceberg.vm.provision "file", source: "../common_scripts/ops-monitor-compose.yml", destination: "ops-monitor-compose.yml"
      iceberg.vm.provision "file", source: "../common_scripts/ex-div-bot-compose.yml", destination: "ex-div-bot-compose.yml"
      iceberg.vm.provision "file", source: "../common_scripts/find-hard-asset-stocks-compose.yml", destination: "find-hard-asset-stocks-compose.yml"
      iceberg.vm.provision "file", source: "../common_scripts/namecheap-updater.service", destination: "/tmp/namecheap-updater.service"
      iceberg.vm.provision "file", source: "../common_scripts/namecheap-updater-compose.yml", destination: "namecheap-updater-compose.yml"
      iceberg.vm.provision "file", source: "../common_scripts/vonage-api-test-script-compose.yml", destination: "vonage-api-test-script-compose.yml"
      iceberg.vm.provision "file", source: "../common_scripts/all-stocks-classifier-compose.yml", destination: "all-stocks-classifier-compose.yml"
      iceberg.vm.provision "file", source: "../common_scripts/stage-change-alerter-compose.yml", destination: "stage-change-alerter-compose.yml"
      iceberg.vm.provision "file", source: "../common_scripts/generate-all-tickers-compose.yml", destination: "generate-all-tickers-compose.yml"
      iceberg.vm.provision "file", source: "../common_scripts/fix_hosts_local_system.sh", destination: "fix_hosts_local_system.sh"
      iceberg.vm.provision "file", source: "../common_scripts/cli.sh", destination: "cli.sh"
      iceberg.vm.provision "file", source: "../common_scripts/upgrade.sh", destination: "upgrade.sh"
      iceberg.vm.provision "file", source: "../common_scripts/backup_database.sh", destination: "backup_database.sh"
      iceberg.vm.provision "file", source: "../common_scripts/restore_database.sh", destination: "restore_database.sh"
      iceberg.vm.provision "file", source: "../common_scripts/backup_lts_database.sh", destination: "backup_lts_database.sh"
      iceberg.vm.provision "file", source: "../common_scripts/restore_lts_database.sh", destination: "restore_lts_database.sh"
      iceberg.vm.provision "file", source: "../common_scripts/help_tradr.sh", destination: "help_tradr.sh"
      iceberg.vm.provision "file", source: "../common_scripts/version_tradr.sh", destination: "version_tradr.sh"
      iceberg.vm.provision "file", source: "../common_scripts/clean_up.sh", destination: "clean_up.sh"
      iceberg.vm.provision "file", source: "../common_scripts/run_tradr_daemons.sh", destination: "run_tradr_daemons.sh"
      iceberg.vm.provision "file", source: "../common_scripts/run_swing_trader.sh", destination: "run_swing_trader.sh"
      iceberg.vm.provision "file", source: "../common_scripts/run_bitcoin_grabber.sh", destination: "run_bitcoin_grabber.sh"
      iceberg.vm.provision "file", source: "../common_scripts/run_ibit_grabber.sh", destination: "run_ibit_grabber.sh"
      iceberg.vm.provision "file", source: "../common_scripts/run_indices_grabber.sh", destination: "run_indices_grabber.sh"
      iceberg.vm.provision "file", source: "../common_scripts/run_treasuries_grabber.sh", destination: "run_treasuries_grabber.sh"
      iceberg.vm.provision "file", source: "../common_scripts/run_commodities_grabber.sh", destination: "run_commodities_grabber.sh"
      iceberg.vm.provision "file", source: "../common_scripts/run_core_ratios.sh", destination: "run_core_ratios.sh"
      iceberg.vm.provision "file", source: "../common_scripts/run_tepper_indicators.sh", destination: "run_tepper_indicators.sh"
      iceberg.vm.provision "file", source: "../common_scripts/run_stocks_scanner.sh", destination: "run_stocks_scanner.sh"
      iceberg.vm.provision "file", source: "../common_scripts/disable_firewall_patch.sh", destination: "disable_firewall_patch.sh"
      iceberg.vm.provision "file", source: "../common_scripts/start_filebeat_patch.sh", destination: "start_filebeat_patch.sh"

      iceberg.vm.provision "shell", run:  "always", inline: "ip route del 0/0"
      iceberg.vm.provision "shell", run:  "always", inline: "route add default gw 192.168.1.1"

      iceberg.vm.provision "shell", path:  "../common_scripts/disable_firewall_patch.sh"
      iceberg.vm.provision "shell", path:  "../common_scripts/fix_hosts_local_system.sh"

      # Have to copy files in two stages if needs root permissions in destination
      iceberg.vm.provision "shell", run:  "always", inline: "mv /tmp/exchange-rate-service.service /etc/systemd/system/exchange-rate-service.service"
      iceberg.vm.provision "shell", run:  "always", inline: "mv /tmp/candlestick-analyser-service.service /etc/systemd/system/candlestick-analyser-service.service"
      iceberg.vm.provision "shell", run:  "always", inline: "mv /tmp/realtime-monitor.service /etc/systemd/system/realtime-monitor.service"
      iceberg.vm.provision "shell", run:  "always", inline: "mv /tmp/open-trades-monitor.service /etc/systemd/system/open-trades-monitor.service"
      iceberg.vm.provision "shell", run:  "always", inline: "mv /tmp/rsi-buy-sniper.service /etc/systemd/system/rsi-buy-sniper.service"
      iceberg.vm.provision "shell", run:  "always", inline: "mv /tmp/rsi-sell-sniper.service /etc/systemd/system/rsi-sell-sniper.service"
      iceberg.vm.provision "shell", run:  "always", inline: "mv /tmp/ops-monitor.service /etc/systemd/system/ops-monitor.service"
      iceberg.vm.provision "shell", run:  "always", inline: "mv /tmp/namecheap-updater.service /etc/systemd/system/namecheap-updater.service"
      iceberg.vm.provision "shell", run:  "always", inline: "mv /tmp/tradr-cron-vagrant-user /var/spool/cron/vagrant"

      iceberg.vm.provision "shell", env: {
                                        'SQL_DB_HOSTNAME' => '127.0.0.1',
                                        'VONAGE_API_SECRET' => ENV['VONAGE_API_SECRET'],
                                        'VONAGE_API_KEY' => ENV['VONAGE_API_KEY'],
                                        'FMP_FREE_API_KEY' => ENV['FMP_FREE_API_KEY'],
                                        'PROTONMAIL_PLUS_BRIDGE_HOSTNAME'=> ENV['PROTONMAIL_PLUS_BRIDGE_HOSTNAME'],
                                        'PROTONMAIL_PLUS_BRIDGE_PORT' => ENV['PROTONMAIL_PLUS_BRIDGE_PORT'],
                                        'PROTONMAIL_PLUS_BRIDGE_KEY' => ENV['PROTONMAIL_PLUS_BRIDGE_KEY'],
                                        'ALPHAVANTAGE_BASIC_API_KEY' => ENV['ALPHAVANTAGE_BASIC_API_KEY'],
                                        'ALPHAVANTAGE_FREE_API_KEY' => ENV['ALPHAVANTAGE_FREE_API_KEY']
                                         },
                                         path: '../common_scripts/setup_env_vars.sh'

    # These scripts are automatically copied from host machine and then executed on the guest
    iceberg.vm.provision "shell", path:  "../common_scripts/start_filebeat_patch.sh"
    iceberg.vm.provision "shell", path:  "../common_scripts/set_symlinks.sh"
    iceberg.vm.provision "shell", path:  "../common_scripts/upgrade.sh"
    iceberg.vm.provision "shell", path:  "../common_scripts/setup_systemd.sh"
    # iceberg.vm.provision "shell", path:  "../common_scripts/clean_up.sh"
  end       # of iceberg

end
