# -*- mode: ruby -*-
# vi: set ft=ruby :

# PRODUCTION (MacBook)

# smarter way to do multi-machine is here : https://manski.net/articles/vagrant/multi-machine-tutorial

Vagrant.configure("2") do |config|

  # Services VBOX
  # =============
  # Start first as it is the logging server node
  config.vm.define "prd_services" do |prd_services|
    prd_services.vm.box = "tradr7-services"
    prd_services.vm.hostname = "prd-services"
    prd_services.vm.network :public_network, ip: "192.168.1.56", bridge: "eth0"

    prd_services.vm.provider "virtualbox" do |vb0|
        vb0.gui = true
        vb0.memory = "3072"
    end
    prd_services.vm.provision "file", source: "disable_firewall_patch.sh", destination: "disable_firewall_patch.sh"
    prd_services.vm.provision "file", source: "start_elasticsearch_patch.sh", destination: "start_elasticsearch_patch.sh"
    prd_services.vm.provision "file", source: "start_filebeat_patch.sh", destination: "start_filebeat_patch.sh"
    prd_services.vm.provision "shell", run:  "always", inline: "ip route del 0/0"
    prd_services.vm.provision "shell", run:  "always", inline: "route add default gw 192.168.1.1"
    # prd_services.vm.provision "shell", run:  "always", inline: "route add default gw 192.168.1.254"
    prd_services.vm.provision "shell", path:  "./disable_firewall_patch.sh"
    prd_services.vm.provision "shell", path:  "./start_elasticsearch_patch.sh"
    prd_services.vm.provision "shell", path:  "./start_filebeat_patch.sh"
    prd_services.vm.provision "shell", path:  "./clean_up.sh"
  end       # of prd_services

  # Application VBOX
  # ================
  # All my TRADR application code is on here - node subject to lots of change
  # This is the node the user interacts with - the 'iceberg' terminal
  # Docker, Jython etc.
  config.vm.define "prd_iceberg" do |iceberg|
    iceberg.vm.box = "tradr7"
  #  # tradr0.vm.box_check_update = true
    iceberg.vm.hostname = "prd-iceberg"
    iceberg.vm.network :public_network, ip: "192.168.1.55", bridge: "eth0"
    iceberg.vm.provider "virtualbox" do |vb0|
        vb0.gui = true
        vb0.memory = "4096"
    end
      iceberg.vm.provision "file", source: "configure.sh", destination: "configure.sh"
      iceberg.vm.provision "file", source: "clean_up.sh", destination: "clean_up.sh"
      iceberg.vm.provision "file", source: "start_stocks_scanner.sh", destination: "start_stocks_scanner.sh"
      iceberg.vm.provision "file", source: "disable_firewall_patch.sh", destination: "disable_firewall_patch.sh"
      iceberg.vm.provision "shell", path:  "./disable_firewall_patch.sh"
      iceberg.vm.provision "shell", run:  "always", inline: "ip route del 0/0"
      iceberg.vm.provision "shell", run:  "always", inline: "route add default gw 192.168.1.1"
      # iceberg.vm.provision "shell", run:  "always", inline: "route add default gw 192.168.1.254"
      iceberg.vm.provision "shell", env: {
                                        'VONAGE_API_SECRET' => ENV['VONAGE_API_SECRET'],
                                        'VONAGE_API_KEY' => ENV['VONAGE_API_KEY'],
                                        'FMP_FREE_API_KEY' => ENV[ 'FMP_FREE_API_KEY'],
                                        'PROTONMAIL_PLUS_BRIDGE_KEY' => ENV['PROTONMAIL_PLUS_BRIDGE_KEY'],
                                        'ALPHAVANTAGE_BASIC_API_KEY' => ENV['ALPHAVANTAGE_BASIC_API_KEY'],
                                        'ALPHAVANTAGE_FREE_API_KEY' => ENV['ALPHAVANTAGE_FREE_API_KEY']
                                         },
                                         path: './setup_env_vars.sh'
    iceberg.vm.provision "shell", path:  "./set_symlinks.sh"
    iceberg.vm.provision "shell", path:  "./clean_up.sh"
  end       # of iceberg

end
